


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000         ;A program to compute the sum, difference, 
    3 00000000         ;and absolute difference of two signed 
    4 00000000         ;32-bit numbers.
    5 00000000         
    6 00000000         ;------Assembler Directives----------------
    7 00000000                 THUMB                        ; uses Thumb instru
                                                            ctions
    8 00000000         ; Data Variables
    9 00000000                 AREA             DATA, ALIGN=2 ; places objects 
                                                            in data memory (RAM
                                                            )
   10 00000000                 EXPORT           SUM [DATA,SIZE=4] ; export publ
                                                            ic varialbe "SUM" f
                                                            or use elsewhere
   11 00000000                 EXPORT           DIFF [DATA,SIZE=4] ; export pub
                                                            lic varialbe "DIFF"
                                                             for use elsewhere
   12 00000000                 EXPORT           ABS [DATA,SIZE=4] ; export publ
                                                            ic varialbe "ABS" f
                                                            or use elsewhere
   13 00000000                 EXPORT           LGR [DATA,SIZE=4] ; export publ
                                                            ic varialbe "LRG" f
                                                            or use elsewhere
   14 00000000         
   15 00000000 00 00 00 
              00       SUM     SPACE            4           ; allocates 4 unini
                                                            tialized bytes in R
                                                            AM for SUM
   16 00000004 00 00 00 
              00       DIFF    SPACE            4           ; allocates 4 unini
                                                            tialized bytes in R
                                                            AM for DIFF
   17 00000008 00 00 00 
              00       ABS     SPACE            4           ; allocates 4 unini
                                                            tialized bytes in R
                                                            AM for ABS
   18 0000000C 00 00 00 
              00       LGR     SPACE            4           ; allocates 4 unini
                                                            tialized bytes in R
                                                            AM for LRG
   19 00000010         
   20 00000010         ; Code
   21 00000010                 AREA             |.text|, CODE, READONLY, ALIGN=
2 
                                                            ; code in flash ROM
                                                            
   22 00000000                 EXPORT           Start       ; export public fun
                                                            ction "start" for u
                                                            se elsewhere
   23 00000000 00000003 
                       NUM1    DCD              3           ; 32-bit constant d
                                                            ata NUM1 = -1
   24 00000004 FFFFFFFE 
                       NUM2    DCD              -2          ; 32-bit constant d
                                                            ata NUM2 = 2
   25 00000008         ;-------End of Assembler Directives----------
   26 00000008         
   27 00000008         GET_SUM                              ; subroutine GET_SU



ARM Macro Assembler    Page 2 


                                                            M
   28 00000008 EB01 0002       ADD              R0, R1, R2  ; R0=R1+R2
   29 0000000C 4B0E            LDR              R3, =SUM    ; R3=&SUM, R3 point
                                                            s to SUM
   30 0000000E 6018            STR              R0, [R3]    ; store the sum of 
                                                            NUM1 and NUM2 to SU
                                                            M
   31 00000010 4770            BX               LR          ; subroutine return
                                                            
   32 00000012         GET_DIFF                             ; subroutine GET_DI
                                                            FF
   33 00000012 1A88            SUBS             R0, R1, R2  ; R0=R1-R2
   34 00000014 4B0D            LDR              R3, =DIFF   ; R3=&DIFF, R3 poin
                                                            ts to DIFF
   35 00000016 6018            STR              R0, [R3]    ; store the differe
                                                            nt of NUM1 and NUM2
                                                             to DIFF
   36 00000018 D402            BMI              GET_ABS     ; check condition c
                                                            ode, if N=1 (i.e. t
                                                            he difference is ne
                                                            gative), 
   37 0000001A         ; branch to GET_ABS to calculate the absolute difference
                       
   38 0000001A         STR_ABS                              ; label STR_ABS, st
                                                            ore the absolute di
                                                            fference
   39 0000001A 4B0D            LDR              R3, =ABS    ; R3=&ABS, R3 point
                                                            s to ABS
   40 0000001C 6018            STR              R0, [R3]    ; store the absolut
                                                            e difference to ABS
                                                            
   41 0000001E 4770            BX               LR          ; subroutine return
                                                            
   42 00000020         GET_ABS                              ; label GET_ABS, ca
                                                            lculate the absolut
                                                            e difference if the
                                                             difference is nega
                                                            tive
   43 00000020 F1C0 0000       RSB              R0, R0, #0  ; R0=0-R0;
   44 00000024 E7F9            B                STR_ABS     ; branch to STR_ABS
                                                             to store the resul
                                                            t
   45 00000026         
   46 00000026         GET_LARGER                           ; label GET_LARGER,
                                                             compare NUM1 and N
                                                            UM2
   47 00000026 4B0B            LDR              R3, =LGR    ; R3 points to LGR
   48 00000028 4291            CMP              R1, R2      ; compare R1 and R2
                                                            
   49 0000002A DC01            BGT              NUM1GT      ; if NUM1 is greate
                                                            r tham NUM2, we jum
                                                            p to NUM1
   50 0000002C         NUM2GT
   51 0000002C 601A            STR              R2, [R3]    ; otherwise, we con
                                                            tniue with NUM2
   52 0000002E 4770            BX               LR          ; subroutine return
                                                            
   53 00000030         NUM1GT
   54 00000030 6019            STR              R1, [R3]    ; if the condition 



ARM Macro Assembler    Page 3 


                                                            was true
   55 00000032 4770            BX               LR          ; subroutine return
                                                            
   56 00000034         
   57 00000034         
   58 00000034         Start
   59 00000034 F85F 1038       LDR              R1, NUM1    ; R1=NUM1
   60 00000038 F85F 2038       LDR              R2, NUM2    ; R2=NUM2
   61 0000003C F7FF FFE4       BL               GET_SUM
   62 00000040 F7FF FFE7       BL               GET_DIFF
   63 00000044 F7FF FFEF       BL               GET_LARGER
   64 00000048         
   65 00000048                 ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
   66 00000048                 END                          ; end of file
              00000000 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp.sp --apcs=
interwork --depend=.\sim.d -o.\sim.o -IC:\Keil_v5\ARM\RV31\INC -IC:\Keil_v5\ARM
\CMSIS\Include -IC:\Keil_v5\ARM\INC\TI\TM4C123 --predefine="__EVAL SETA 1" --pr
edefine="__UVISION_VERSION SETA 536" --list=.\sim.lst sim.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ABS 00000008

Symbol: ABS
   Definitions
      At line 17 in file sim.s
   Uses
      At line 12 in file sim.s
      At line 39 in file sim.s

DATA 00000000

Symbol: DATA
   Definitions
      At line 9 in file sim.s
   Uses
      None
Comment: DATA unused
DIFF 00000004

Symbol: DIFF
   Definitions
      At line 16 in file sim.s
   Uses
      At line 11 in file sim.s
      At line 34 in file sim.s

LGR 0000000C

Symbol: LGR
   Definitions
      At line 18 in file sim.s
   Uses
      At line 13 in file sim.s
      At line 47 in file sim.s

SUM 00000000

Symbol: SUM
   Definitions
      At line 15 in file sim.s
   Uses
      At line 10 in file sim.s
      At line 29 in file sim.s

5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 21 in file sim.s
   Uses
      None
Comment: .text unused
GET_ABS 00000020

Symbol: GET_ABS
   Definitions
      At line 42 in file sim.s
   Uses
      At line 36 in file sim.s
Comment: GET_ABS used once
GET_DIFF 00000012

Symbol: GET_DIFF
   Definitions
      At line 32 in file sim.s
   Uses
      At line 62 in file sim.s
Comment: GET_DIFF used once
GET_LARGER 00000026

Symbol: GET_LARGER
   Definitions
      At line 46 in file sim.s
   Uses
      At line 63 in file sim.s
Comment: GET_LARGER used once
GET_SUM 00000008

Symbol: GET_SUM
   Definitions
      At line 27 in file sim.s
   Uses
      At line 61 in file sim.s
Comment: GET_SUM used once
NUM1 00000000

Symbol: NUM1
   Definitions
      At line 23 in file sim.s
   Uses
      At line 59 in file sim.s
Comment: NUM1 used once
NUM1GT 00000030

Symbol: NUM1GT
   Definitions
      At line 53 in file sim.s
   Uses
      At line 49 in file sim.s
Comment: NUM1GT used once
NUM2 00000004

Symbol: NUM2



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 24 in file sim.s
   Uses
      At line 60 in file sim.s
Comment: NUM2 used once
NUM2GT 0000002C

Symbol: NUM2GT
   Definitions
      At line 50 in file sim.s
   Uses
      None
Comment: NUM2GT unused
STR_ABS 0000001A

Symbol: STR_ABS
   Definitions
      At line 38 in file sim.s
   Uses
      At line 44 in file sim.s
Comment: STR_ABS used once
Start 00000034

Symbol: Start
   Definitions
      At line 58 in file sim.s
   Uses
      At line 22 in file sim.s
Comment: Start used once
11 symbols
351 symbols in table
